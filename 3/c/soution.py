import math
def solution(n):
    n = int(n)
    res = 0
    while n != 1:
        if n & 1 == 0:
            n >>= 1
        elif n == 3  or ((n + 1) & n) > ((n - 1) & (n - 2)):
            n -= 1
        else:
            n += 1
        res += 1
    return res
    # k = int(2**math.ceil(math.log(n,2)))
    # dp = [i for i in range(k+1)]
    # dp[1] = 0
    # count = 1
    # cur = 2
    # while cur<=k:
    #     dp[cur] = count
    #     cur *= 2
    #     count += 1

    # for i in range(3,n+1):
    #     dp[i] = min(dp[i], dp[i-1]+1)
    #     if i<k:
    #         dp[i] = min(dp[i], dp[i+1]+1)
    #     if i & 1 == 0:
    #         dp[i] =  min(dp[i], dp[i >> 1]+1)

    # return dp[n]
    

    
# Your code here
###############################################
# Code below is not submitted
import unittest

class sTest(unittest.TestCase):

    def test_function(self):
        test_cases = \
            [
               (1,0),\
               (2,1),\
               (3,2),\
               (4,2),\
               (5,3),\
               (6,3),\
               (7,4),\
               (8,3),\
               (9,4),\
               (10,4),\
               (11,5),\
               (12,4),\
               (13,5),\
               (14,5),\
               (15,5),\
               (16,4),\
               (31,6),\
               (32,5),\
               (33,6),\
               (309,12),\
               (1333221322312,54),\
               (99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999,610),\
               (9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999923423848343248932423843248932489324892398493284893249823984982349823984329843289498324893249842398329849832498239843298493284892349823498239843294823984239842983449823489239849328498324984328428394923849823498298342983498298342983498239842398498329849839843289489595977572332949283988923773743747234893284238942834892392,2080),\
            ]
        for arguments, expected in test_cases:
            with self.subTest(arguments=arguments, expected=expected):
                self.assertEqual(solution(arguments), expected)


if __name__ == '__main__':
    unittest.main()

